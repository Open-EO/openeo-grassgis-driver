# -*- coding: utf-8 -*-
"""This file includes all required openEO response schemas
"""
from typing import List, Tuple, Optional, Dict
from openeo_grass_gis_driver.models.schema_base import JsonableObject, EoLinks, EoLink


__author__ = "Sören Gebbert"
__copyright__ = "Copyright 2018, Sören Gebbert, mundialis"
__maintainer__ = "Sören Gebbert"
__email__ = "soerengebbert@googlemail.com"


class ProcessGraphNode(JsonableObject):
    """This is the definition of a single process graph

    process_id:
        required
        string (process_id) ^[A-Za-z0-9_]+$
        Unique identifier of the process.

    result:
        boolean
        Used to specify which node is the last in the chain and returns
        the result to return to the requesting context. This flag MUST
        only be set once in each list of process nodes.
        default: false

    description:
        string (description)
        Detailed description to fully explain the entity.
        CommonMark 0.28 syntax MAY be used for rich text representation.

    arguments:
        required
        ProcessArguments (process_arguments)
}
    """

    def __init__(self, process_id: str,
                        arguments: List,
                        description: str = None, result: bool = False):

        # ID in pattern
        pattern = "^[A-Za-z0-9_]+$"
        x = re.search(pattern, id)
        if not x:
            es = ErrorSchema(id=str(datetime.now()), code=400,
                message="The process_id MUST match the following pattern: %s" % pattern)
            return make_response(es.to_json(), 400)
        self.process_id = process_id
        self.description = description
        # self.arguments = arguments
        self.result = result


class ProcessGraph(JsonableObject):
    """ A process graph defines a graph-like structure as a connected set of
    executable processes. Each key is a unique identifier (node id) that is
    used to refer to the process in the graph.

    process_graph:
        object (Process Graph)
        A process graph defines a graph-like structure as a connected set
        of executable processes. Each key is a unique identifier (node id)
        that is used to refer to the process in the graph.

    Title and description from "Modify a stored process graph"
    title
        string (title) Nullable
        A short description to easily distinguish entities.
    description
        string (description) Nullable
        Detailed description to fully explain the entity.
        CommonMark 0.28 syntax MAY be used for rich text representation.


    """

    def __init__(self, process_graph: Dict[str, ProcessGraphNode],
                    title: str = None, description: str = None):

        self.title = title
        self.description = description
        self.process_graph = process_graph


class ProcessGraphListEntry(JsonableObject):
    """An entry in the process graph list
    https://open-eo.github.io/openeo-api/v/0.4.0/apireference/#tag/Process-Graph-Management/paths/~1process_graphs/get
    --> Responses

    id:
        required
        string (process_graph_id) ^[A-Za-z0-9_\-\.~]+$
        Unique identifier of a job that is generated by the back-end
        during job submission. MUST match the specified pattern.

    title:
        string (title) Nullable
        A short description to easily distinguish entities.

    description:
        string (description) Nullable
        Detailed description to fully explain the entity.
        CommonMark 0.28 syntax MAY be used for rich text representation.

    """

    def __init__(self, id: str, title: str = None, description: str = None):

        self.title = title
        self.description = description
        pattern = "^[A-Za-z0-9_\-\.~]+$"
        x = re.search(pattern, id)
        if not x:
            es = ErrorSchema(id=str(datetime.now()), code=400,
                message="The id MUST match the following pattern: %s" % pattern)
        self.id = id


class ProcessGraphList(JsonableObject):
    """A list of process graph definitions
    https://open-eo.github.io/openeo-api/v/0.4.0/apireference/#tag/Process-Graph-Management/paths/~1process_graphs/get
    --> Responses

    List of ProcessGraphListEntry

    links:
        required
        Array of object (list_links)
        Additional links related to this list of resources. Could reference
        to alternative formats such as a rendered HTML version.
        The links could also be used for pagination using the rel types first,
        prev, next and last. Pagination is currently OPTIONAL and clients
        may not support it. Therefore it MUST be implemented in a way that
        clients not supporting pagination get all resources regardless.

    """

    def __init__(self, process_graphs: List[ProcessGraphListEntry],
                 links: Optional[EoLinks] = None):

        self.process_graphs = process_graphs
        self.links = links
